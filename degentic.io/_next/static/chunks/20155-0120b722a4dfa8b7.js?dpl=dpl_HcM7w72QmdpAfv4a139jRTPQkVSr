"use strict";
(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [20155], {
        4256: (e, t, r) => {
            r.d(t, {
                jH: () => l
            });
            var n = r(12115);
            r(95155);
            var o = n.createContext(void 0);

            function l(e) {
                let t = n.useContext(o);
                return e || t || "ltr"
            }
        },
        20196: (e, t, r) => {
            r.d(t, {
                n: () => d
            });
            var n = r(12115),
                o = r(88068),
                l = r(23360),
                u = r(41524),
                a = r(95155),
                i = "focusScope.autoFocusOnMount",
                c = "focusScope.autoFocusOnUnmount",
                s = {
                    bubbles: !1,
                    cancelable: !0
                },
                d = n.forwardRef((e, t) => {
                    let {
                        loop: r = !1,
                        trapped: d = !1,
                        onMountAutoFocus: y,
                        onUnmountAutoFocus: b,
                        ...E
                    } = e, [h, w] = n.useState(null), g = (0, u.c)(y), A = (0, u.c)(b), x = n.useRef(null), R = (0, o.s)(t, e => w(e)), N = n.useRef({
                        paused: !1,
                        pause() {
                            this.paused = !0
                        },
                        resume() {
                            this.paused = !1
                        }
                    }).current;
                    n.useEffect(() => {
                        if (d) {
                            let e = function(e) {
                                    if (N.paused || !h) return;
                                    let t = e.target;
                                    h.contains(t) ? x.current = t : v(x.current, {
                                        select: !0
                                    })
                                },
                                t = function(e) {
                                    if (N.paused || !h) return;
                                    let t = e.relatedTarget;
                                    null === t || h.contains(t) || v(x.current, {
                                        select: !0
                                    })
                                };
                            document.addEventListener("focusin", e), document.addEventListener("focusout", t);
                            let r = new MutationObserver(function(e) {
                                if (document.activeElement === document.body)
                                    for (let t of e) t.removedNodes.length > 0 && v(h)
                            });
                            return h && r.observe(h, {
                                childList: !0,
                                subtree: !0
                            }), () => {
                                document.removeEventListener("focusin", e), document.removeEventListener("focusout", t), r.disconnect()
                            }
                        }
                    }, [d, h, N.paused]), n.useEffect(() => {
                        if (h) {
                            p.add(N);
                            let e = document.activeElement;
                            if (!h.contains(e)) {
                                let t = new CustomEvent(i, s);
                                h.addEventListener(i, g), h.dispatchEvent(t), t.defaultPrevented || (function(e) {
                                    let {
                                        select: t = !1
                                    } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = document.activeElement;
                                    for (let n of e)
                                        if (v(n, {
                                                select: t
                                            }), document.activeElement !== r) return
                                }(f(h).filter(e => "A" !== e.tagName), {
                                    select: !0
                                }), document.activeElement === e && v(h))
                            }
                            return () => {
                                h.removeEventListener(i, g), setTimeout(() => {
                                    let t = new CustomEvent(c, s);
                                    h.addEventListener(c, A), h.dispatchEvent(t), t.defaultPrevented || v(null != e ? e : document.body, {
                                        select: !0
                                    }), h.removeEventListener(c, A), p.remove(N)
                                }, 0)
                            }
                        }
                    }, [h, g, A, N]);
                    let F = n.useCallback(e => {
                        if (!r && !d || N.paused) return;
                        let t = "Tab" === e.key && !e.altKey && !e.ctrlKey && !e.metaKey,
                            n = document.activeElement;
                        if (t && n) {
                            let t = e.currentTarget,
                                [o, l] = function(e) {
                                    let t = f(e);
                                    return [m(t, e), m(t.reverse(), e)]
                                }(t);
                            o && l ? e.shiftKey || n !== l ? e.shiftKey && n === o && (e.preventDefault(), r && v(l, {
                                select: !0
                            })) : (e.preventDefault(), r && v(o, {
                                select: !0
                            })) : n === t && e.preventDefault()
                        }
                    }, [r, d, N.paused]);
                    return (0, a.jsx)(l.sG.div, {
                        tabIndex: -1,
                        ...E,
                        ref: R,
                        onKeyDown: F
                    })
                });

            function f(e) {
                let t = [],
                    r = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
                        acceptNode: e => {
                            let t = "INPUT" === e.tagName && "hidden" === e.type;
                            return e.disabled || e.hidden || t ? NodeFilter.FILTER_SKIP : e.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP
                        }
                    });
                for (; r.nextNode();) t.push(r.currentNode);
                return t
            }

            function m(e, t) {
                for (let r of e)
                    if (! function(e, t) {
                            let {
                                upTo: r
                            } = t;
                            if ("hidden" === getComputedStyle(e).visibility) return !0;
                            for (; e && (void 0 === r || e !== r);) {
                                if ("none" === getComputedStyle(e).display) return !0;
                                e = e.parentElement
                            }
                            return !1
                        }(r, {
                            upTo: t
                        })) return r
            }

            function v(e) {
                let {
                    select: t = !1
                } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (e && e.focus) {
                    var r;
                    let n = document.activeElement;
                    e.focus({
                        preventScroll: !0
                    }), e !== n && (r = e) instanceof HTMLInputElement && "select" in r && t && e.select()
                }
            }
            d.displayName = "FocusScope";
            var p = function() {
                let e = [];
                return {
                    add(t) {
                        let r = e[0];
                        t !== r && (null == r || r.pause()), (e = y(e, t)).unshift(t)
                    },
                    remove(t) {
                        var r;
                        null === (r = (e = y(e, t))[0]) || void 0 === r || r.resume()
                    }
                }
            }();

            function y(e, t) {
                let r = [...e],
                    n = r.indexOf(t);
                return -1 !== n && r.splice(n, 1), r
            }
        },
        31027: (e, t, r) => {
            r.d(t, {
                F: () => u
            });
            var n = r(43463);
            let o = e => "boolean" == typeof e ? `${e}` : 0 === e ? "0" : e,
                l = n.$,
                u = (e, t) => r => {
                    var n;
                    if ((null == t ? void 0 : t.variants) == null) return l(e, null == r ? void 0 : r.class, null == r ? void 0 : r.className);
                    let {
                        variants: u,
                        defaultVariants: a
                    } = t, i = Object.keys(u).map(e => {
                        let t = null == r ? void 0 : r[e],
                            n = null == a ? void 0 : a[e];
                        if (null === t) return null;
                        let l = o(t) || o(n);
                        return u[e][l]
                    }), c = r && Object.entries(r).reduce((e, t) => {
                        let [r, n] = t;
                        return void 0 === n || (e[r] = n), e
                    }, {});
                    return l(e, i, null == t ? void 0 : null === (n = t.compoundVariants) || void 0 === n ? void 0 : n.reduce((e, t) => {
                        let {
                            class: r,
                            className: n,
                            ...o
                        } = t;
                        return Object.entries(o).every(e => {
                            let [t, r] = e;
                            return Array.isArray(r) ? r.includes({
                                ...a,
                                ...c
                            } [t]) : ({
                                ...a,
                                ...c
                            })[t] === r
                        }) ? [...e, r, n] : e
                    }, []), null == r ? void 0 : r.class, null == r ? void 0 : r.className)
                }
        },
        40767: (e, t, r) => {
            r.d(t, {
                A: () => n
            });
            let n = (0, r(67401).A)("X", [
                ["path", {
                    d: "M18 6 6 18",
                    key: "1bl5f8"
                }],
                ["path", {
                    d: "m6 6 12 12",
                    key: "d8bk6v"
                }]
            ])
        },
        49741: (e, t, r) => {
            r.d(t, {
                N: () => i
            });
            var n = r(12115),
                o = r(18166),
                l = r(88068),
                u = r(12317),
                a = r(95155);

            function i(e) {
                let t = e + "CollectionProvider",
                    [r, i] = (0, o.A)(t),
                    [c, s] = r(t, {
                        collectionRef: {
                            current: null
                        },
                        itemMap: new Map
                    }),
                    d = e => {
                        let {
                            scope: t,
                            children: r
                        } = e, o = n.useRef(null), l = n.useRef(new Map).current;
                        return (0, a.jsx)(c, {
                            scope: t,
                            itemMap: l,
                            collectionRef: o,
                            children: r
                        })
                    };
                d.displayName = t;
                let f = e + "CollectionSlot",
                    m = n.forwardRef((e, t) => {
                        let {
                            scope: r,
                            children: n
                        } = e, o = s(f, r), i = (0, l.s)(t, o.collectionRef);
                        return (0, a.jsx)(u.DX, {
                            ref: i,
                            children: n
                        })
                    });
                m.displayName = f;
                let v = e + "CollectionItemSlot",
                    p = "data-radix-collection-item",
                    y = n.forwardRef((e, t) => {
                        let {
                            scope: r,
                            children: o,
                            ...i
                        } = e, c = n.useRef(null), d = (0, l.s)(t, c), f = s(v, r);
                        return n.useEffect(() => (f.itemMap.set(c, {
                            ref: c,
                            ...i
                        }), () => void f.itemMap.delete(c))), (0, a.jsx)(u.DX, {
                            [p]: "",
                            ref: d,
                            children: o
                        })
                    });
                return y.displayName = v, [{
                    Provider: d,
                    Slot: m,
                    ItemSlot: y
                }, function(t) {
                    let r = s(e + "CollectionConsumer", t);
                    return n.useCallback(() => {
                        let e = r.collectionRef.current;
                        if (!e) return [];
                        let t = Array.from(e.querySelectorAll("[".concat(p, "]")));
                        return Array.from(r.itemMap.values()).sort((e, r) => t.indexOf(e.ref.current) - t.indexOf(r.ref.current))
                    }, [r.collectionRef, r.itemMap])
                }, i]
            }
        },
        62292: (e, t, r) => {
            r.d(t, {
                Oh: () => l
            });
            var n = r(12115),
                o = 0;

            function l() {
                n.useEffect(() => {
                    var e, t;
                    let r = document.querySelectorAll("[data-radix-focus-guard]");
                    return document.body.insertAdjacentElement("afterbegin", null !== (e = r[0]) && void 0 !== e ? e : u()), document.body.insertAdjacentElement("beforeend", null !== (t = r[1]) && void 0 !== t ? t : u()), o++, () => {
                        1 === o && document.querySelectorAll("[data-radix-focus-guard]").forEach(e => e.remove()), o--
                    }
                }, [])
            }

            function u() {
                let e = document.createElement("span");
                return e.setAttribute("data-radix-focus-guard", ""), e.tabIndex = 0, e.style.outline = "none", e.style.opacity = "0", e.style.position = "fixed", e.style.pointerEvents = "none", e
            }
        },
        67357: (e, t, r) => {
            r.d(t, {
                RG: () => g,
                bL: () => S,
                q7: () => L
            });
            var n = r(12115),
                o = r(93610),
                l = r(49741),
                u = r(88068),
                a = r(18166),
                i = r(67668),
                c = r(23360),
                s = r(41524),
                d = r(1488),
                f = r(4256),
                m = r(95155),
                v = "rovingFocusGroup.onEntryFocus",
                p = {
                    bubbles: !1,
                    cancelable: !0
                },
                y = "RovingFocusGroup",
                [b, E, h] = (0, l.N)(y),
                [w, g] = (0, a.A)(y, [h]),
                [A, x] = w(y),
                R = n.forwardRef((e, t) => (0, m.jsx)(b.Provider, {
                    scope: e.__scopeRovingFocusGroup,
                    children: (0, m.jsx)(b.Slot, {
                        scope: e.__scopeRovingFocusGroup,
                        children: (0, m.jsx)(N, {
                            ...e,
                            ref: t
                        })
                    })
                }));
            R.displayName = y;
            var N = n.forwardRef((e, t) => {
                    let {
                        __scopeRovingFocusGroup: r,
                        orientation: l,
                        loop: a = !1,
                        dir: i,
                        currentTabStopId: y,
                        defaultCurrentTabStopId: b,
                        onCurrentTabStopIdChange: h,
                        onEntryFocus: w,
                        preventScrollOnEntryFocus: g = !1,
                        ...x
                    } = e, R = n.useRef(null), N = (0, u.s)(t, R), F = (0, f.jH)(i), [C = null, k] = (0, d.i)({
                        prop: y,
                        defaultProp: b,
                        onChange: h
                    }), [S, L] = n.useState(!1), T = (0, s.c)(w), j = E(r), M = n.useRef(!1), [D, K] = n.useState(0);
                    return n.useEffect(() => {
                        let e = R.current;
                        if (e) return e.addEventListener(v, T), () => e.removeEventListener(v, T)
                    }, [T]), (0, m.jsx)(A, {
                        scope: r,
                        orientation: l,
                        dir: F,
                        loop: a,
                        currentTabStopId: C,
                        onItemFocus: n.useCallback(e => k(e), [k]),
                        onItemShiftTab: n.useCallback(() => L(!0), []),
                        onFocusableItemAdd: n.useCallback(() => K(e => e + 1), []),
                        onFocusableItemRemove: n.useCallback(() => K(e => e - 1), []),
                        children: (0, m.jsx)(c.sG.div, {
                            tabIndex: S || 0 === D ? -1 : 0,
                            "data-orientation": l,
                            ...x,
                            ref: N,
                            style: {
                                outline: "none",
                                ...e.style
                            },
                            onMouseDown: (0, o.m)(e.onMouseDown, () => {
                                M.current = !0
                            }),
                            onFocus: (0, o.m)(e.onFocus, e => {
                                let t = !M.current;
                                if (e.target === e.currentTarget && t && !S) {
                                    let t = new CustomEvent(v, p);
                                    if (e.currentTarget.dispatchEvent(t), !t.defaultPrevented) {
                                        let e = j().filter(e => e.focusable);
                                        I([e.find(e => e.active), e.find(e => e.id === C), ...e].filter(Boolean).map(e => e.ref.current), g)
                                    }
                                }
                                M.current = !1
                            }),
                            onBlur: (0, o.m)(e.onBlur, () => L(!1))
                        })
                    })
                }),
                F = "RovingFocusGroupItem",
                C = n.forwardRef((e, t) => {
                    let {
                        __scopeRovingFocusGroup: r,
                        focusable: l = !0,
                        active: u = !1,
                        tabStopId: a,
                        ...s
                    } = e, d = (0, i.B)(), f = a || d, v = x(F, r), p = v.currentTabStopId === f, y = E(r), {
                        onFocusableItemAdd: h,
                        onFocusableItemRemove: w
                    } = v;
                    return n.useEffect(() => {
                        if (l) return h(), () => w()
                    }, [l, h, w]), (0, m.jsx)(b.ItemSlot, {
                        scope: r,
                        id: f,
                        focusable: l,
                        active: u,
                        children: (0, m.jsx)(c.sG.span, {
                            tabIndex: p ? 0 : -1,
                            "data-orientation": v.orientation,
                            ...s,
                            ref: t,
                            onMouseDown: (0, o.m)(e.onMouseDown, e => {
                                l ? v.onItemFocus(f) : e.preventDefault()
                            }),
                            onFocus: (0, o.m)(e.onFocus, () => v.onItemFocus(f)),
                            onKeyDown: (0, o.m)(e.onKeyDown, e => {
                                if ("Tab" === e.key && e.shiftKey) {
                                    v.onItemShiftTab();
                                    return
                                }
                                if (e.target !== e.currentTarget) return;
                                let t = function(e, t, r) {
                                    var n;
                                    let o = (n = e.key, "rtl" !== r ? n : "ArrowLeft" === n ? "ArrowRight" : "ArrowRight" === n ? "ArrowLeft" : n);
                                    if (!("vertical" === t && ["ArrowLeft", "ArrowRight"].includes(o)) && !("horizontal" === t && ["ArrowUp", "ArrowDown"].includes(o))) return k[o]
                                }(e, v.orientation, v.dir);
                                if (void 0 !== t) {
                                    if (e.metaKey || e.ctrlKey || e.altKey || e.shiftKey) return;
                                    e.preventDefault();
                                    let r = y().filter(e => e.focusable).map(e => e.ref.current);
                                    if ("last" === t) r.reverse();
                                    else if ("prev" === t || "next" === t) {
                                        "prev" === t && r.reverse();
                                        let n = r.indexOf(e.currentTarget);
                                        r = v.loop ? function(e, t) {
                                            return e.map((r, n) => e[(t + n) % e.length])
                                        }(r, n + 1) : r.slice(n + 1)
                                    }
                                    setTimeout(() => I(r))
                                }
                            })
                        })
                    })
                });
            C.displayName = F;
            var k = {
                ArrowLeft: "prev",
                ArrowUp: "prev",
                ArrowRight: "next",
                ArrowDown: "next",
                PageUp: "first",
                Home: "first",
                PageDown: "last",
                End: "last"
            };

            function I(e) {
                let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    r = document.activeElement;
                for (let n of e)
                    if (n === r || (n.focus({
                            preventScroll: t
                        }), document.activeElement !== r)) return
            }
            var S = R,
                L = C
        },
        67401: (e, t, r) => {
            r.d(t, {
                A: () => i
            });
            var n = r(12115);
            let o = e => e.replace(/([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase(),
                l = function() {
                    for (var e = arguments.length, t = Array(e), r = 0; r < e; r++) t[r] = arguments[r];
                    return t.filter((e, t, r) => !!e && "" !== e.trim() && r.indexOf(e) === t).join(" ").trim()
                };
            var u = {
                xmlns: "http://www.w3.org/2000/svg",
                width: 24,
                height: 24,
                viewBox: "0 0 24 24",
                fill: "none",
                stroke: "currentColor",
                strokeWidth: 2,
                strokeLinecap: "round",
                strokeLinejoin: "round"
            };
            let a = (0, n.forwardRef)((e, t) => {
                    let {
                        color: r = "currentColor",
                        size: o = 24,
                        strokeWidth: a = 2,
                        absoluteStrokeWidth: i,
                        className: c = "",
                        children: s,
                        iconNode: d,
                        ...f
                    } = e;
                    return (0, n.createElement)("svg", {
                        ref: t,
                        ...u,
                        width: o,
                        height: o,
                        stroke: r,
                        strokeWidth: i ? 24 * Number(a) / Number(o) : a,
                        className: l("lucide", c),
                        ...f
                    }, [...d.map(e => {
                        let [t, r] = e;
                        return (0, n.createElement)(t, r)
                    }), ...Array.isArray(s) ? s : [s]])
                }),
                i = (e, t) => {
                    let r = (0, n.forwardRef)((r, u) => {
                        let {
                            className: i,
                            ...c
                        } = r;
                        return (0, n.createElement)(a, {
                            ref: u,
                            iconNode: t,
                            className: l("lucide-".concat(o(e)), i),
                            ...c
                        })
                    });
                    return r.displayName = "".concat(e), r
                }
        },
        98867: (e, t, r) => {
            r.d(t, {
                A: () => n
            });
            let n = (0, r(67401).A)("Check", [
                ["path", {
                    d: "M20 6 9 17l-5-5",
                    key: "1gmf2c"
                }]
            ])
        }
    }
]);