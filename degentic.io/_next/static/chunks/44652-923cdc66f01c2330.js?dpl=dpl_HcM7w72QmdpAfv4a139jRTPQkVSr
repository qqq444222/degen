"use strict";
(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
    [44652], {
        23441: (e, n, t) => {
            t.d(n, {
                g: () => s
            });
            var a = t(80477);
            class s extends a.C {
                constructor({
                    value: e
                }) {
                    super(`Number \`${e}\` is not a valid decimal number.`, {
                        name: "InvalidDecimalNumberError"
                    })
                }
            }
        },
        26542: (e, n, t) => {
            t.d(n, {
                $K: () => o,
                $R: () => eN,
                $n: () => L,
                AN: () => C,
                Ao: () => eX,
                Aq: () => ep,
                Au: () => eb,
                CO: () => G,
                DW: () => el,
                EA: () => eA,
                Fg: () => r,
                Fy: () => em,
                GS: () => j,
                Gq: () => X,
                HS: () => e_,
                HX: () => eg,
                Hb: () => U,
                Ht: () => ef,
                J3: () => K,
                JQ: () => ee,
                Jn: () => ec,
                KF: () => eE,
                KV: () => l,
                Kt: () => m,
                M7: () => Z,
                MV: () => d,
                Ng: () => P,
                OU: () => E,
                OV: () => ei,
                PI: () => B,
                Pg: () => eB,
                QT: () => eV,
                Qm: () => a,
                SS: () => e$,
                ST: () => O,
                T: () => Y,
                T_: () => eW,
                Uo: () => et,
                V4: () => c,
                Vq: () => eh,
                W: () => M,
                XI: () => eT,
                Y_: () => eC,
                Yl: () => H,
                Yx: () => W,
                ZT: () => f,
                _u: () => p,
                aS: () => k,
                ap: () => u,
                av: () => ed,
                bG: () => i,
                bi: () => z,
                cI: () => eM,
                d: () => T,
                di: () => eu,
                dz: () => N,
                eD: () => v,
                f4: () => eF,
                gD: () => A,
                gs: () => ek,
                h2: () => q,
                he: () => s,
                iB: () => eR,
                ip: () => eH,
                jJ: () => eS,
                jY: () => ea,
                j_: () => er,
                lc: () => eq,
                lk: () => b,
                ln: () => w,
                mf: () => F,
                nc: () => V,
                o: () => x,
                o0: () => eo,
                oU: () => y,
                ol: () => R,
                pC: () => I,
                pc: () => eU,
                po: () => eJ,
                q1: () => J,
                qC: () => eI,
                r_: () => S,
                sD: () => D,
                sb: () => ev,
                tm: () => ew,
                u8: () => ex,
                uj: () => $,
                uq: () => es,
                us: () => ey,
                vl: () => en,
                w3: () => eD,
                wC: () => Q,
                x1: () => h,
                xP: () => g,
                xw: () => _,
                zH: () => eO
            });
            let a = 2n ** (8n - 1n) - 1n,
                s = 2n ** (16n - 1n) - 1n,
                p = 2n ** (24n - 1n) - 1n,
                i = 2n ** (32n - 1n) - 1n,
                u = 2n ** (40n - 1n) - 1n,
                y = 2n ** (48n - 1n) - 1n,
                r = 2n ** (56n - 1n) - 1n,
                d = 2n ** (64n - 1n) - 1n,
                o = 2n ** (72n - 1n) - 1n,
                m = 2n ** (80n - 1n) - 1n,
                l = 2n ** (88n - 1n) - 1n,
                b = 2n ** (96n - 1n) - 1n,
                c = 2n ** (104n - 1n) - 1n,
                v = 2n ** (112n - 1n) - 1n,
                f = 2n ** (120n - 1n) - 1n,
                w = 2n ** (128n - 1n) - 1n,
                M = 2n ** (136n - 1n) - 1n,
                T = 2n ** (144n - 1n) - 1n,
                x = 2n ** (152n - 1n) - 1n,
                g = 2n ** (160n - 1n) - 1n,
                h = 2n ** (168n - 1n) - 1n,
                A = 2n ** (176n - 1n) - 1n,
                I = 2n ** (184n - 1n) - 1n,
                F = 2n ** (192n - 1n) - 1n,
                k = 2n ** (200n - 1n) - 1n,
                R = 2n ** (208n - 1n) - 1n,
                S = 2n ** (216n - 1n) - 1n,
                $ = 2n ** (224n - 1n) - 1n,
                _ = 2n ** (232n - 1n) - 1n,
                C = 2n ** (240n - 1n) - 1n,
                E = 2n ** (248n - 1n) - 1n,
                N = 2n ** (256n - 1n) - 1n,
                D = -(2n ** (8n - 1n)),
                B = -(2n ** (16n - 1n)),
                O = -(2n ** (24n - 1n)),
                q = -(2n ** (32n - 1n)),
                H = -(2n ** (40n - 1n)),
                W = -(2n ** (48n - 1n)),
                V = -(2n ** (56n - 1n)),
                J = -(2n ** (64n - 1n)),
                U = -(2n ** (72n - 1n)),
                X = -(2n ** (80n - 1n)),
                j = -(2n ** (88n - 1n)),
                K = -(2n ** (96n - 1n)),
                Y = -(2n ** (104n - 1n)),
                G = -(2n ** (112n - 1n)),
                L = -(2n ** (120n - 1n)),
                P = -(2n ** (128n - 1n)),
                Q = -(2n ** (136n - 1n)),
                z = -(2n ** (144n - 1n)),
                Z = -(2n ** (152n - 1n)),
                ee = -(2n ** (160n - 1n)),
                en = -(2n ** (168n - 1n)),
                et = -(2n ** (176n - 1n)),
                ea = -(2n ** (184n - 1n)),
                es = -(2n ** (192n - 1n)),
                ep = -(2n ** (200n - 1n)),
                ei = -(2n ** (208n - 1n)),
                eu = -(2n ** (216n - 1n)),
                ey = -(2n ** (224n - 1n)),
                er = -(2n ** (232n - 1n)),
                ed = -(2n ** (240n - 1n)),
                eo = -(2n ** (248n - 1n)),
                em = -(2n ** (256n - 1n)),
                el = 2n ** 8n - 1n,
                eb = 2n ** 16n - 1n,
                ec = 2n ** 24n - 1n,
                ev = 2n ** 32n - 1n,
                ef = 2n ** 40n - 1n,
                ew = 2n ** 48n - 1n,
                eM = 2n ** 56n - 1n,
                eT = 2n ** 64n - 1n,
                ex = 2n ** 72n - 1n,
                eg = 2n ** 80n - 1n,
                eh = 2n ** 88n - 1n,
                eA = 2n ** 96n - 1n,
                eI = 2n ** 104n - 1n,
                eF = 2n ** 112n - 1n,
                ek = 2n ** 120n - 1n,
                eR = 2n ** 128n - 1n,
                eS = 2n ** 136n - 1n,
                e$ = 2n ** 144n - 1n,
                e_ = 2n ** 152n - 1n,
                eC = 2n ** 160n - 1n,
                eE = 2n ** 168n - 1n,
                eN = 2n ** 176n - 1n,
                eD = 2n ** 184n - 1n,
                eB = 2n ** 192n - 1n,
                eO = 2n ** 200n - 1n,
                eq = 2n ** 208n - 1n,
                eH = 2n ** 216n - 1n,
                eW = 2n ** 224n - 1n,
                eV = 2n ** 232n - 1n,
                eJ = 2n ** 240n - 1n,
                eU = 2n ** 248n - 1n,
                eX = 2n ** 256n - 1n
        },
        35684: (e, n, t) => {
            t.d(n, {
                X: () => s
            });
            var a = t(23441);

            function s(e, n) {
                if (!/^(-?)([0-9]*)\.?([0-9]*)$/.test(e)) throw new a.g({
                    value: e
                });
                let [t, s = "0"] = e.split("."), p = t.startsWith("-");
                if (p && (t = t.slice(1)), s = s.replace(/(0+)$/, ""), 0 === n) 1 === Math.round(Number(`.${s}`)) && (t = `${BigInt(t)+1n}`), s = "";
                else if (s.length > n) {
                    let [e, a, p] = [s.slice(0, n - 1), s.slice(n - 1, n), s.slice(n)], i = Math.round(Number(`${a}.${p}`));
                    (s = i > 9 ? `${BigInt(e)+BigInt(1)}0`.padStart(e.length + 1, "0") : `${e}${i}`).length > n && (s = s.slice(1), t = `${BigInt(t)+1n}`), s = s.slice(0, n)
                } else s = s.padEnd(n, "0");
                return BigInt(`${p?"-":""}${t}${s}`)
            }
        },
        38472: (e, n, t) => {
            t.d(n, {
                Ag: () => i,
                D8: () => l,
                F4: () => c,
                Rm: () => r,
                SJ: () => y,
                TX: () => b,
                _: () => d,
                b2: () => s,
                g1: () => m,
                oX: () => u,
                v2: () => a,
                xw: () => o
            });
            let a = [{
                    inputs: [{
                        components: [{
                            name: "target",
                            type: "address"
                        }, {
                            name: "allowFailure",
                            type: "bool"
                        }, {
                            name: "callData",
                            type: "bytes"
                        }],
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "aggregate3",
                    outputs: [{
                        components: [{
                            name: "success",
                            type: "bool"
                        }, {
                            name: "returnData",
                            type: "bytes"
                        }],
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }],
                s = [{
                    name: "query",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        type: "tuple[]",
                        name: "queries",
                        components: [{
                            type: "address",
                            name: "sender"
                        }, {
                            type: "string[]",
                            name: "urls"
                        }, {
                            type: "bytes",
                            name: "data"
                        }]
                    }],
                    outputs: [{
                        type: "bool[]",
                        name: "failures"
                    }, {
                        type: "bytes[]",
                        name: "responses"
                    }]
                }, {
                    name: "HttpError",
                    type: "error",
                    inputs: [{
                        type: "uint16",
                        name: "status"
                    }, {
                        type: "string",
                        name: "message"
                    }]
                }],
                p = [{
                    inputs: [],
                    name: "ResolverNotFound",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ResolverWildcardNotSupported",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ResolverNotContract",
                    type: "error"
                }, {
                    inputs: [{
                        name: "returnData",
                        type: "bytes"
                    }],
                    name: "ResolverError",
                    type: "error"
                }, {
                    inputs: [{
                        components: [{
                            name: "status",
                            type: "uint16"
                        }, {
                            name: "message",
                            type: "string"
                        }],
                        name: "errors",
                        type: "tuple[]"
                    }],
                    name: "HttpError",
                    type: "error"
                }],
                i = [...p, {
                    name: "resolve",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes"
                    }, {
                        name: "data",
                        type: "bytes"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }, {
                        name: "address",
                        type: "address"
                    }]
                }, {
                    name: "resolve",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes"
                    }, {
                        name: "data",
                        type: "bytes"
                    }, {
                        name: "gateways",
                        type: "string[]"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }, {
                        name: "address",
                        type: "address"
                    }]
                }],
                u = [...p, {
                    name: "reverse",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        type: "bytes",
                        name: "reverseName"
                    }],
                    outputs: [{
                        type: "string",
                        name: "resolvedName"
                    }, {
                        type: "address",
                        name: "resolvedAddress"
                    }, {
                        type: "address",
                        name: "reverseResolver"
                    }, {
                        type: "address",
                        name: "resolver"
                    }]
                }, {
                    name: "reverse",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        type: "bytes",
                        name: "reverseName"
                    }, {
                        type: "string[]",
                        name: "gateways"
                    }],
                    outputs: [{
                        type: "string",
                        name: "resolvedName"
                    }, {
                        type: "address",
                        name: "resolvedAddress"
                    }, {
                        type: "address",
                        name: "reverseResolver"
                    }, {
                        type: "address",
                        name: "resolver"
                    }]
                }],
                y = [{
                    name: "text",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "key",
                        type: "string"
                    }],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }],
                r = [{
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }],
                    outputs: [{
                        name: "",
                        type: "address"
                    }]
                }, {
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "coinType",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }]
                }],
                d = [{
                    inputs: [{
                        name: "_signer",
                        type: "address"
                    }, {
                        name: "_hash",
                        type: "bytes32"
                    }, {
                        name: "_signature",
                        type: "bytes"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [{
                        name: "_signer",
                        type: "address"
                    }, {
                        name: "_hash",
                        type: "bytes32"
                    }, {
                        name: "_signature",
                        type: "bytes"
                    }],
                    outputs: [{
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function",
                    name: "isValidSig"
                }],
                o = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }],
                m = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }],
                l = [{
                    inputs: [{
                        internalType: "address",
                        name: "sender",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "balance",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "needed",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "ERC1155InsufficientBalance",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "approver",
                        type: "address"
                    }],
                    name: "ERC1155InvalidApprover",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "idsLength",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "valuesLength",
                        type: "uint256"
                    }],
                    name: "ERC1155InvalidArrayLength",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }],
                    name: "ERC1155InvalidOperator",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "receiver",
                        type: "address"
                    }],
                    name: "ERC1155InvalidReceiver",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "sender",
                        type: "address"
                    }],
                    name: "ERC1155InvalidSender",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }],
                    name: "ERC1155MissingApprovalForAll",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "account",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "bool",
                        name: "approved",
                        type: "bool"
                    }],
                    name: "ApprovalForAll",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "ids",
                        type: "uint256[]"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]"
                    }],
                    name: "TransferBatch",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "id",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }],
                    name: "TransferSingle",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "string",
                        name: "value",
                        type: "string"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "id",
                        type: "uint256"
                    }],
                    name: "URI",
                    type: "event"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "account",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256"
                    }],
                    name: "balanceOf",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address[]",
                        name: "accounts",
                        type: "address[]"
                    }, {
                        internalType: "uint256[]",
                        name: "ids",
                        type: "uint256[]"
                    }],
                    name: "balanceOfBatch",
                    outputs: [{
                        internalType: "uint256[]",
                        name: "",
                        type: "uint256[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "account",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }],
                    name: "isApprovedForAll",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint256[]",
                        name: "ids",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes"
                    }],
                    name: "safeBatchTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }, {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes"
                    }],
                    name: "safeTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "operator",
                        type: "address"
                    }, {
                        internalType: "bool",
                        name: "approved",
                        type: "bool"
                    }],
                    name: "setApprovalForAll",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes4",
                        name: "interfaceId",
                        type: "bytes4"
                    }],
                    name: "supportsInterface",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "uri",
                    outputs: [{
                        internalType: "string",
                        name: "",
                        type: "string"
                    }],
                    stateMutability: "view",
                    type: "function"
                }],
                b = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "tokenId",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "ApprovalForAll",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "operator",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "approved",
                        type: "bool"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "tokenId",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "payable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "tokenId",
                        type: "uint256"
                    }],
                    outputs: []
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "getApproved",
                    stateMutability: "view",
                    inputs: [{
                        name: "tokenId",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "address"
                    }]
                }, {
                    type: "function",
                    name: "isApprovedForAll",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "operator",
                        type: "address"
                    }],
                    outputs: [{
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "ownerOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "tokenId",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "owner",
                        type: "address"
                    }]
                }, {
                    type: "function",
                    name: "safeTransferFrom",
                    stateMutability: "payable",
                    inputs: [{
                        name: "from",
                        type: "address"
                    }, {
                        name: "to",
                        type: "address"
                    }, {
                        name: "tokenId",
                        type: "uint256"
                    }],
                    outputs: []
                }, {
                    type: "function",
                    name: "safeTransferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "from",
                        type: "address"
                    }, {
                        name: "to",
                        type: "address"
                    }, {
                        name: "id",
                        type: "uint256"
                    }, {
                        name: "data",
                        type: "bytes"
                    }],
                    outputs: []
                }, {
                    type: "function",
                    name: "setApprovalForAll",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "operator",
                        type: "address"
                    }, {
                        name: "approved",
                        type: "bool"
                    }],
                    outputs: []
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "tokenByIndex",
                    stateMutability: "view",
                    inputs: [{
                        name: "index",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "tokenByIndex",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "index",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "tokenId",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "tokenURI",
                    stateMutability: "view",
                    inputs: [{
                        name: "tokenId",
                        type: "uint256"
                    }],
                    outputs: [{
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "payable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "tokeId",
                        type: "uint256"
                    }],
                    outputs: []
                }],
                c = [{
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }],
                    name: "Approval",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        name: "sender",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "receiver",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "assets",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        name: "shares",
                        type: "uint256"
                    }],
                    name: "Deposit",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }],
                    name: "Transfer",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        name: "sender",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "receiver",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "assets",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        name: "shares",
                        type: "uint256"
                    }],
                    name: "Withdraw",
                    type: "event"
                }, {
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    name: "allowance",
                    outputs: [{
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "approve",
                    outputs: [{
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "asset",
                    outputs: [{
                        name: "assetTokenAddress",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    name: "balanceOf",
                    outputs: [{
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    name: "convertToAssets",
                    outputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    name: "convertToShares",
                    outputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "assets",
                        type: "uint256"
                    }, {
                        name: "receiver",
                        type: "address"
                    }],
                    name: "deposit",
                    outputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        name: "caller",
                        type: "address"
                    }],
                    name: "maxDeposit",
                    outputs: [{
                        name: "maxAssets",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "caller",
                        type: "address"
                    }],
                    name: "maxMint",
                    outputs: [{
                        name: "maxShares",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }],
                    name: "maxRedeem",
                    outputs: [{
                        name: "maxShares",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }],
                    name: "maxWithdraw",
                    outputs: [{
                        name: "maxAssets",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "shares",
                        type: "uint256"
                    }, {
                        name: "receiver",
                        type: "address"
                    }],
                    name: "mint",
                    outputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    name: "previewDeposit",
                    outputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    name: "previewMint",
                    outputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    name: "previewRedeem",
                    outputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    name: "previewWithdraw",
                    outputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "shares",
                        type: "uint256"
                    }, {
                        name: "receiver",
                        type: "address"
                    }, {
                        name: "owner",
                        type: "address"
                    }],
                    name: "redeem",
                    outputs: [{
                        name: "assets",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "totalAssets",
                    outputs: [{
                        name: "totalManagedAssets",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "totalSupply",
                    outputs: [{
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        name: "to",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "transfer",
                    outputs: [{
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        name: "from",
                        type: "address"
                    }, {
                        name: "to",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "transferFrom",
                    outputs: [{
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        name: "assets",
                        type: "uint256"
                    }, {
                        name: "receiver",
                        type: "address"
                    }, {
                        name: "owner",
                        type: "address"
                    }],
                    name: "withdraw",
                    outputs: [{
                        name: "shares",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }]
        }
    }
]);